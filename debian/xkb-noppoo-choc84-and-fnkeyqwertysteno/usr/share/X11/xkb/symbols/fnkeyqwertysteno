default partial alphanumeric_keys modifier_keys
xkb_symbols "fnkeyqwertysteno" {

    name[Group1]= "English (US, qwertysteno on fn and number keys)";

    // key  <ESC> { { type="TWO_LEVEL", [ 0, Escape ] } };
    // key <TLDE> { { type="TWO_LEVEL", [ 0, XF86Launch2 ] } };
    key  <ESC> { [ Escape ] };
    key <TLDE> { [ XF86Launch2 ] };
`   //
    // This layout makes it possible to use the function and number keys to
    // practice stenographic input on sites like http://qwertysteno.org
    //
    // On my Noppoo Choc84, the function and number keys are aligned vertically
    // rather than offset left to right the way the alphabet keys are. This makes
    // them ideal for steno, since with the laser-cut keytoppers attached, they
    // are above the qwerty home-row, and that makes it easier to keep using
    // this keyboard in qwerty mode, making it a switch-hitter.
    //
    // Because it uses Cherry MX key switches, which have a cross-shaped mount
    // pin, it is possible to rotate keycaps 180 or 90 degrees. By turning all
    // of the function keys 180, and the steno vowel keys 90, the gap between
    // keys is reduced, making it more easily possible to press two keys at the
    // same time, for use as a steno keyboard without any keytoppers stuck on it.
    // Whether or not it works better with or without the keytoppers is probably
    // a matter of personal opinion. YMMV.
    //
    key <FK01> { [ q ] };           // (F1 )->(q)-> S-
    key <AE01> { [ a ] };           // ( 1 )->(a)-> S-
    key <FK02> { [ w ] };           // (F2 )->(w)-> T-
    key <AE02> { [ s ] };           // ( 2 )->(s)-> K-
    key <FK03> { [ e ] };           // (F3 )->(e)-> P-
    key <AE03> { [ d ] };           // ( 3 )->(d)-> W-
    key <FK04> { [ r ] };           // (F4 )->(r)-> H-
    key <AE04> { [ f ] };           // ( 4 )->(f)-> R-
    key <FK05> { [ t ] };           // (F5 )->(t)-> *
    key <AE05> { [ g ] };           // ( 5 )->(g)-> *
    key <FK06> { [ 0 ] };           // (F6 )->(0)-> #
    key <AE06> { [ 0 ] };           // ( 6 )->(0)-> #
    key <FK07> { [ y ] };           // (F7 )->(y)-> *
    key <AE07> { [ h ] };           // ( 7 )->(h)-> *
    key <FK08> { [ u ] };           // (F8 )->(u)-> -F
    key <AE08> { [ j ] };           // ( 8 )->(j)-> -R
    key <FK09> { [ i ] };           // (F9 )->(i)-> -P
    key <AE09> { [ k ] };           // ( 9 )->(k)-> -B
    key <FK10> { [ o ] };           // (F10)->(o)-> -L
    key <AE10> { [ l ] };           // ( 0 )->(l)-> -G
    key <FK11> { [ p ] };           // (F11)->(p)-> -T
    key <AE11> { [ semicolon ] };   // ( - )->(;)-> -S
    key <FK12> { [ bracketleft ] }; // (F12)->([)-> -D
    key <AE12> { [ apostrophe ] };  // ( = )->(')-> -Z

    key <PRSC> {
        type= "CTRL+ALT",
        symbols[Group1]= [ 0, XF86WebCam, Print, Sys_Req ]
    };
    key <PAUS> {
        type= "CTRL+ALT",
        symbols[Group1]= [ XF86AudioPause, XF86AudioRecord, XF86AudioMedia, NoSymbol ]
    };

    key <AD03> { [ c ] }; // (e)->(c)-> A
    key <AD04> { [ v ] }; // (r)->(v)-> O
    key <AD07> { [ n ] }; // (u)->(n)-> E
    key <AD08> { [ m ] }; // (i)->(m)-> U

    key <AD01> { [ ] };
    key <AD02> { [ ] };

    key <AD05> { [ ] };
    key <AD06> { [ ] };

    key <AD09> { [ ] };
    key <AD10> { [ ] };
    key <AD11> { [ ] };
    key <AD12> { [ ] };
    key <BKSL> { [ ] };

    key <AC01> {
        type= "CTRL+ALT",
        symbols[Group1]= [ XF86AudioPause, XF86AudioPlay, XF86AudioStop ]
    };
    key <AC02> {
        type= "CTRL+ALT",
        symbols[Group1]= [ XF86AudioRewind, XF86Launch5, XF86Launch6 ]
    };
    key <AC03> {
        type= "CTRL+ALT",
        symbols[Group1]= [ XF86AudioForward, XF86Launch7, XF86Launch8 ]
    };
    key <AC04> { [ ] };
    key <AC05> { [ ] };
    key <AC06> { [ ] };
    key <AC07> { [ ] };
    key <AC08> { [ ] };
    key <AC09> { [ ] };
    key <AC10> { [ ] };
    key <AC11> { [ ] };

    key <AB01> { [ ] };
    key <AB02> { [ ] };
    key <AB03> { [ ] };
    key <AB04> { [ ] };
    key <AB05> { [ ] };
    key <AB06> { [ ] };
    key <AB07> { [ ] };
    key <AB08> { [ ] };
    key <AB09> { [ ] };
    key <AB10> { [ ] };

    key  <INS> { [ Insert ] };
    key <DELE> { [ Delete ] };
    key <HOME> { [ Home ] };
    key <PGUP> { [ Prior ] };
    key <PGDN> { [ Next ] };
    key  <END> { [ End ] };

    key <LEFT> { [ Left ] };
    key   <UP> { [ Up ] };
    key <DOWN> { [ Down ] };
    key <RGHT> { [ Right ] };
};
